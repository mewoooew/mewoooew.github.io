<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>yoli の 树洞 bot</title><link>https://www.yolichan.fun/zh/</link><description>Recent content on yoli の 树洞 bot</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Tue, 22 Aug 2023 11:13:19 +0800</lastBuildDate><atom:link href="https://www.yolichan.fun/zh/index.xml" rel="self" type="application/rss+xml"/><item><title>2023 08 22 配置友链页面</title><link>https://www.yolichan.fun/zh/2023/08/22/2023-08-22-config-friend-link/</link><pubDate>Tue, 22 Aug 2023 11:13:19 +0800</pubDate><guid>https://www.yolichan.fun/zh/2023/08/22/2023-08-22-config-friend-link/</guid><description>序 友链页面的配置主要还是看网站风格和个人喜好, 虽然暂时还是小透明一枚, 没有什么友链可挂, 但还是想一次性将小破站修缮完整(给小破站一点排面😹)</description><content:encoded><![CDATA[<h3 id="序">序</h3>
<p>友链页面的配置主要还是看网站风格和个人喜好, 虽然暂时还是小透明一枚, 没有什么友链可挂, 但还是想一次性将小破站修缮完整(给小破站一点排面😹), 这样将来也能投入到更纯粹的创作之中. 闲逛时感觉将光标悬于头像上头像便自动旋转360度的动态效果很有趣, 于是参考了Jay<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>的代码,  这位作者的代码加入了简单的移动页面适配, 且代码可读性比较高, 配置起来也比较简单. 最后调整了原方案的字体和配色, 与网站主题保持一致, 友链页面便搭建完成了, 在整个博客搭建过程中, 属于比较简单的一环.</p>
<h3 id="短代码模板">短代码模板</h3>
<p>同样通过创建短代码shortcodes的方式引入友链模板. 在<code>/blog-yoli/layouts/shortcodes/</code>目录下创建短代码模板文件<code>friend.html</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="ln"> 1</span><span class="cl">{{ if .IsNamedParams }}
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="p">&lt;</span><span class="nt">a</span> <span class="na">target</span><span class="o">=</span><span class="s">&#34;_blank&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">{{</span> <span class="err">.</span><span class="na">Get</span> <span class="err">&#34;</span><span class="na">url</span><span class="err">&#34;</span> <span class="err">}}</span> <span class="na">title</span><span class="o">=</span><span class="s">{{</span> <span class="err">.</span><span class="na">Get</span> <span class="err">&#34;</span><span class="na">name</span><span class="err">&#34;</span> <span class="err">}}</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;friendurl&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;frienddiv&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;frienddivleft&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">      <span class="p">&lt;</span><span class="nt">img</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;myfriend&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">{{</span> <span class="err">.</span><span class="na">Get</span> <span class="err">&#34;</span><span class="na">logo</span><span class="err">&#34;</span> <span class="err">}}</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;frienddivright&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;friendname&#34;</span><span class="p">&gt;</span>{{ .Get &#34;name&#34; }}<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;friendinfo&#34;</span><span class="p">&gt;</span>{{ .Get &#34;word&#34; }}<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">{{ end }}
</span></span></code></pre></div><h3 id="友链页面文件">友链页面文件</h3>
<p>在<code>/blog-yoli/content/zh/</code>(后续copy到en目录下)下创建友链页面文件 <code>links.md</code>用以存放和展示友链:</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/hugo-friend-link-archive.png" alt="image-20230822115700409"></p>
<blockquote>
<p>其中{{}}里面的内容即需要展示的友链主要信息组成: 姓名\链接\logo\简介</p>
<p>由于直接展示代码文本会被网站运行, 所以这里展示的是代码段截图😅</p>
</blockquote>
<h3 id="友链的样式设计">友链的样式设计</h3>
<p>在样式文件<code>/blog-yoli/static/css/den.css</code>中添加友链的样式设计信息如下:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="ln">  1</span><span class="cl"><span class="c">/* 友链 */</span>
</span></span><span class="line"><span class="ln">  2</span><span class="cl"><span class="p">.</span><span class="nc">friendurl</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">  3</span><span class="cl">	<span class="k">text-decoration</span><span class="p">:</span> <span class="kc">none</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">  4</span><span class="cl">	<span class="k">color</span><span class="p">:</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">74</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="mi">63</span><span class="p">,</span> <span class="mf">0.817</span><span class="p">)</span> 
</span></span><span class="line"><span class="ln">  5</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">  6</span><span class="cl">   
</span></span><span class="line"><span class="ln">  7</span><span class="cl"><span class="p">.</span><span class="nc">myfriend</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">  8</span><span class="cl">	<span class="k">width</span><span class="p">:</span> <span class="mi">56</span><span class="kt">px</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">  9</span><span class="cl">	<span class="k">height</span><span class="p">:</span> <span class="mi">56</span><span class="kt">px</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 10</span><span class="cl">	<span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 11</span><span class="cl">	<span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="mh">#dddddd</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 12</span><span class="cl">	<span class="k">padding</span><span class="p">:</span> <span class="mi">2</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 13</span><span class="cl">	<span class="k">box-shadow</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="mi">1</span><span class="kt">px</span> <span class="mi">1</span><span class="kt">px</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mf">0.278</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 14</span><span class="cl">	<span class="k">margin-top</span><span class="p">:</span> <span class="mi">14</span><span class="kt">px</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 15</span><span class="cl">	<span class="k">margin-left</span><span class="p">:</span> <span class="mi">14</span><span class="kt">px</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 16</span><span class="cl">	<span class="k">background-color</span><span class="p">:</span> <span class="mh">#fff</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 17</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 18</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 19</span><span class="cl"><span class="p">.</span><span class="nc">frienddiv</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 20</span><span class="cl">  <span class="k">font-size</span><span class="p">:</span> <span class="mi">12</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 21</span><span class="cl">	<span class="c">/* height: 85px;
</span></span></span><span class="line"><span class="ln"> 22</span><span class="cl"><span class="c">	margin-top: 10px;
</span></span></span><span class="line"><span class="ln"> 23</span><span class="cl"><span class="c">  margin-right: 1px;
</span></span></span><span class="line"><span class="ln"> 24</span><span class="cl"><span class="c">  margin-left: 2px;
</span></span></span><span class="line"><span class="ln"> 25</span><span class="cl"><span class="c">	width: 31%; */</span>
</span></span><span class="line"><span class="ln"> 26</span><span class="cl">  <span class="k">height</span><span class="p">:</span> <span class="mi">92</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 27</span><span class="cl">  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 28</span><span class="cl">  <span class="k">width</span><span class="p">:</span> <span class="mi">48</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 29</span><span class="cl">	<span class="k">display</span><span class="p">:</span> <span class="kc">inline-block</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 30</span><span class="cl">	<span class="k">border-radius</span><span class="p">:</span> <span class="mi">5</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 31</span><span class="cl">	<span class="k">background</span><span class="p">:</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mf">0.257</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 32</span><span class="cl">	<span class="k">box-shadow</span><span class="p">:</span> <span class="mf">0.3</span><span class="kt">px</span> <span class="mf">0.3</span><span class="kt">px</span> <span class="mf">0.3</span><span class="kt">px</span> <span class="mf">0.3</span><span class="kt">px</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">253</span><span class="p">,</span> <span class="mi">253</span><span class="p">,</span> <span class="mi">253</span><span class="p">,</span> <span class="mf">0.085</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 33</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 34</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 35</span><span class="cl"><span class="p">.</span><span class="nc">frienddiv</span><span class="p">:</span><span class="nd">hover</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 36</span><span class="cl">	<span class="k">background</span><span class="p">:</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mf">0.063</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 37</span><span class="cl">  <span class="k">text-decoration</span><span class="p">:</span> <span class="kc">underline</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 38</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 39</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 40</span><span class="cl"><span class="p">.</span><span class="nc">frienddiv</span><span class="p">:</span><span class="nd">hover</span> <span class="p">.</span><span class="nc">frienddivleft</span> <span class="nt">img</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 41</span><span class="cl">	<span class="k">transition</span><span class="p">:</span> <span class="mf">0.6</span><span class="kt">s</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 42</span><span class="cl">	<span class="kp">-webkit-</span><span class="k">transition</span><span class="p">:</span> <span class="mf">0.6</span><span class="kt">s</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 43</span><span class="cl">	<span class="kp">-moz-</span><span class="k">transition</span><span class="p">:</span> <span class="mf">0.6</span><span class="kt">s</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 44</span><span class="cl">	<span class="kp">-o-</span><span class="k">transition</span><span class="p">:</span> <span class="mf">0.6</span><span class="kt">s</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 45</span><span class="cl">	<span class="kp">-ms-</span><span class="k">transition</span><span class="p">:</span> <span class="mf">0.6</span><span class="kt">s</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 46</span><span class="cl">	<span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">360</span><span class="kt">deg</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 47</span><span class="cl">	<span class="kp">-webkit-</span><span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">360</span><span class="kt">deg</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 48</span><span class="cl">	<span class="kp">-moz-</span><span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">360</span><span class="kt">deg</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 49</span><span class="cl">	<span class="kp">-o-</span><span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">360</span><span class="kt">deg</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 50</span><span class="cl">	<span class="kp">-ms-</span><span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">360</span><span class="kt">deg</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 51</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 52</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 53</span><span class="cl"><span class="p">.</span><span class="nc">frienddivleft</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 54</span><span class="cl">	<span class="k">width</span><span class="p">:</span> <span class="mi">92</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 55</span><span class="cl">	<span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 56</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 57</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 58</span><span class="cl"><span class="p">.</span><span class="nc">frienddivleft</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 59</span><span class="cl">	<span class="k">margin-right</span><span class="p">:</span> <span class="mf">0.5</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 60</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 61</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 62</span><span class="cl"><span class="p">.</span><span class="nc">frienddivright</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 63</span><span class="cl">	<span class="k">margin-top</span><span class="p">:</span> <span class="mi">18</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 64</span><span class="cl">	<span class="k">margin-right</span><span class="p">:</span> <span class="mi">18</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 65</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 66</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 67</span><span class="cl"><span class="p">.</span><span class="nc">friendname</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 68</span><span class="cl">  <span class="k">font-weight</span><span class="p">:</span> <span class="mi">600</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 69</span><span class="cl">  <span class="k">color</span> <span class="p">:</span><span class="nb">rgba</span><span class="p">(</span><span class="mi">93</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mf">0.804</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 70</span><span class="cl">  <span class="k">text-shadow</span><span class="p">:</span><span class="mi">1</span><span class="kt">px</span> <span class="mi">1</span><span class="kt">px</span> <span class="mi">2</span><span class="kt">px</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">142</span><span class="p">,</span> <span class="mi">69</span><span class="p">,</span> <span class="mi">95</span><span class="p">,</span> <span class="mf">0.648</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 71</span><span class="cl">	<span class="k">text-overflow</span><span class="p">:</span> <span class="kc">ellipsis</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 72</span><span class="cl">	<span class="k">overflow</span><span class="p">:</span> <span class="kc">hidden</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 73</span><span class="cl">	<span class="k">white-space</span><span class="p">:</span> <span class="kc">nowrap</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 74</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 75</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 76</span><span class="cl"><span class="p">.</span><span class="nc">friendinfo</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 77</span><span class="cl">  <span class="k">color</span> <span class="p">:</span><span class="nb">rgba</span><span class="p">(</span><span class="mi">93</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mf">0.804</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 78</span><span class="cl">	<span class="k">text-overflow</span><span class="p">:</span> <span class="kc">ellipsis</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 79</span><span class="cl">	<span class="k">overflow</span><span class="p">:</span> <span class="kc">hidden</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 80</span><span class="cl">	<span class="k">white-space</span><span class="p">:</span> <span class="kc">nowrap</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 81</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 82</span><span class="cl">   
</span></span><span class="line"><span class="ln"> 83</span><span class="cl"><span class="p">@</span><span class="k">media</span> <span class="nt">screen</span> <span class="nt">and</span> <span class="o">(</span><span class="nt">max-width</span><span class="o">:</span> <span class="nt">600px</span><span class="o">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 84</span><span class="cl">  <span class="p">.</span><span class="nc">friendinfo</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 85</span><span class="cl">   <span class="k">display</span><span class="p">:</span> <span class="kc">none</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 86</span><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 87</span><span class="cl">  <span class="p">.</span><span class="nc">frienddivleft</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 88</span><span class="cl">   <span class="k">width</span><span class="p">:</span> <span class="mi">84</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 89</span><span class="cl">   <span class="k">margin</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 90</span><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 91</span><span class="cl">  <span class="p">.</span><span class="nc">frienddivright</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 92</span><span class="cl">   <span class="k">height</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 93</span><span class="cl">   <span class="k">margin</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 94</span><span class="cl">   <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 95</span><span class="cl">   <span class="k">align-items</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 96</span><span class="cl">   <span class="k">justify-content</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 97</span><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 98</span><span class="cl">  <span class="p">.</span><span class="nc">friendname</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 99</span><span class="cl">   <span class="k">font-size</span><span class="p">:</span> <span class="mi">14</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">100</span><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="ln">101</span><span class="cl"> <span class="p">}</span>
</span></span></code></pre></div><blockquote>
<p>试图在自定义样式文件<code>custom.css</code>中引入这段代码,但并没有生效orz, 懒得折腾, 所以直接放进了网站样式主文件<code>den.css</code>文件中</p>
</blockquote>
<h3 id="最终呈现效果">最终呈现效果</h3>

<a target="_blank" href=https://www.yolichan.fun title=koi class="friendurl">
  <div class="frienddiv">
    <div class="frienddivleft">
      <img class="myfriend" src=https://cdn.jsdelivr.net/gh/mewoooew/figureBed@main/img/202304022156812.png />
    </div>
    <div class="frienddivright">
      <div class="friendname">koi</div>
      <div class="friendinfo">爱摸鱼的修理工</div>
    </div>
  </div>
</a>


<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/hugo-friend-link-show.png" alt="image-20230822114732588"></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://blog.233so.com/2020/04/friend-link-shortcodes-for-hugo-loveit/#comments">Jay: Hugo 篇四：添加友链卡片 shortcodes</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>#Pagefind 为静态博客配置站内搜索工具</title><link>https://www.yolichan.fun/zh/2023/08/06/2023-08-06-add-pagefind-search-tool/</link><pubDate>Sun, 06 Aug 2023 20:18:13 +0800</pubDate><guid>https://www.yolichan.fun/zh/2023/08/06/2023-08-06-add-pagefind-search-tool/</guid><description>序 方案选择 hugo官网文章Search for your Hugo Website介绍了几种为静态网站添加全文检索功能的方法。其中比较有特色的搜索工具有基于倒挂索引</description><content:encoded><![CDATA[<h3 id="序-方案选择">序 方案选择</h3>
<p><code>hugo</code>官网文章<a href="https://gohugo.io/tools/search/">Search for your Hugo Website</a>介绍了几种为静态网站添加全文检索功能的方法。其中比较有特色的搜索工具有基于倒挂索引(<code>inverted index</code>)的<code>lunr.js</code>和<code>Fuse.js</code>, 二者都是使用比较广泛的全文搜索工具, 后者还具有模糊查询的功能. 不过二者在搜索时需要浏览器把所有文章请求下来, 建立倒挂索引<code>index.json</code>, 再对索引进行搜索, 随着网站内容增加, <code>index.json</code>的体积会越来越大, 会导致网络请求延时, 若考虑生成<code>index.json</code>时只输出标题等关键字, 会导致搜索质量大幅下降. 因此将目光转向了<a href="https://pagefind.app/">pagefind</a> 搜索工具.</p>
<p><code>Pagefind</code>是一个独立的命令行工具, 其原理是：运行<code>Pagefind</code>命令, 扫描所有静态网页并生成索引; 用户搜索时, 通过网页中内嵌的<code>JavaScript</code>脚本来访问预先生成的索引，从而实现静态全文检索。<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> 也就是说, 网站内容的索引在生成网站之前就已经形成了, 无需在浏览器进行生成, 减少了后期网络请求延时的顾虑. 而且在使用了<code>GitHub Action</code>的前提下, <code>Pagefind</code>生成索引的步骤也可以集成到博客部署的工作流中, 不必每次生成网站都要运行一遍<code>Pagefind</code>.</p>
<p><a href="https://pagefind.app/">pagefind</a> 是通过分词的方式来进行搜索的, 所以搜索功能只会在命中分词的时候生效. 比如现在有一个词 碳酸危机, 搜索<code>碳酸</code> \ <code>危机</code>或者<code>碳酸 危机</code>都可以搜到对应的内容, 但是直接搜索<code>碳酸危机</code>会得不到任何搜索结果, 这就是分词导致的.</p>
<p>这种分词的优势是可以大大减少索引文件的大小, <code>hugo</code>默认生成的索引文件包含了每篇文章的全文, 随着文章的增多生成的索引文件会膨胀的比较快, 而<code>pagefind</code>这种通过分词生成索引文件的方式, 只会在有新的分词的时候或者新的文章的时候(因为需要记录分词对应的文章的一些信息, 比如链接)索引文件的大小才会有些微增加, 生成的索引文件膨胀的就会慢很多.<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>在<code>hugo</code>中调用<code>Pagefind</code>的方式通常为在自定义<code>html</code>页面模板或者自定义引入<code>shortcode</code>,再在搜索页面<code>markdown</code>文档引入相关代码,这里图省事参考了同一主题<code>hugo-theme-den</code>的使用者<a href="https://www.pseudoyu.com/zh/search/">pseudoyu</a>作者的代码,使用shortcode的方式, 同时还结合了<a href="https://www.fournoas.com/posts/adding-full-text-search-to-a-hugo-static-website/">白汤四物</a> \ <a href="https://www.dianbanjiu.com/post/%E7%BB%99%E6%88%91%E7%9A%84blog%E5%8A%A0%E4%B8%8A%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/">点半九</a>等作者的教程了解了站内检索功能是如何实现的.</p>
<h3 id="安装pagefind并生成静态索引">安装Pagefind并生成静态索引</h3>
<p>首先通过手动发布实现<code>Pagefind</code>搜索功能, 以便于在本地进行<code>debug</code>, 之后再考虑整合进<code>GitHub Action</code>工作流.</p>
<ul>
<li>
<p>安装并发布</p>
<p>在博客根目录<code>blog-yoli/</code>下通过命令行工具<code>npm</code>安装<code>Pagefind</code>工具并发布<code>hugo</code>站点(站点静态文件默认是发布到<code>blog-yoli/public</code>文件夹下):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">npm i pagefind
</span></span><span class="line"><span class="ln">2</span><span class="cl">hugo
</span></span></code></pre></div></li>
<li>
<p>生成索引</p>
<p>扫描<code>public</code>文件夹, 生成<code>Pagefind</code>索引, 并放到<code>blog-yoli/public/search</code>目录下(不必自己新建, 指定<code>--bundle</code>参数后, 没有这个目录的话<code>Pagefind</code>会自己生成)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">npx pagefind --source public --bundle-dir search
</span></span></code></pre></div><p>也可以通过配置文件实现相同的操作:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="ln">1</span><span class="cl"><span class="c"># Pagefind 会自动在当前目录下查找pagefind.yml配置文件，</span><span class="w">
</span></span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="w"></span><span class="c"># 使用参数或配置文件的效果是等价的</span><span class="w">
</span></span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="w"></span><span class="c"># 在根目录blog-yoli下新建pagefind.yml配置文件,添加保存以下规则:</span><span class="w">
</span></span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="w"></span><span class="nt">source</span><span class="p">:</span><span class="w"> </span><span class="l">public</span><span class="w">
</span></span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="w"></span><span class="nt">bundle_dir</span><span class="p">:</span><span class="w"> </span><span class="l">search</span><span class="w">
</span></span></span></code></pre></div><p>这样之后每次只需要直接运行, 就能更新索引文件, 并放到配置文件中的指定目录下:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">npx pagefind
</span></span></code></pre></div><blockquote>
<p><code>Pagefind</code>默认存放静态文件的文件夹名为<code>_pagefind</code>, 每次生成静态索引文件后, <code>Pagefind</code>会将索引文件放入<code>blog-yoli/public/_pagefind/</code>目录下, 但为了避免之后将网站部署到<code>GitHub Pages</code>上时, <code>GitHub</code>可能会忽略_开头的文件, 所以最好自己指定一个文件夹名, 比如这里的<code>search</code>, 之后静态索引文件将存放在<code>blog-yoli/public/search/</code>目录下.</p>
</blockquote>
</li>
</ul>
<h3 id="在静态网页中添加搜索入口">在静态网页中添加搜索入口</h3>
<ul>
<li>
<p>创建<code>html</code>格式的<code>shortcodes</code>文件</p>
<p>在<code>/blog-yoli/layouts/shortcodes/</code>目录下新建<code>search.html</code>模板文件,输入保存以下代码:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="ln">1</span><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;/search/pagefind-ui.css&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;/search/pagefind-ui.js&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;search&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl">    <span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;DOMContentLoaded&#39;</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl">        <span class="k">new</span> <span class="nx">PagefindUI</span><span class="p">({</span> <span class="nx">element</span><span class="o">:</span> <span class="s2">&#34;#search&#34;</span> <span class="p">});</span>
</span></span><span class="line"><span class="ln">8</span><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="ln">9</span><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></div><p>其中链接目录的文件夹要与之前设置的索引静态文件存放的文件夹名相一致,比如此处为<code>search</code></p>
</li>
<li>
<p>创建搜索页面</p>
<p>在<code>/content/zh/</code>(弄完后可以<code>en</code>目录下原样copy过去)目录下新建文档<code>search.md</code>文档作为显示在网站上的搜索页面:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">hugo new search.md
</span></span></code></pre></div><p>并在<code>search.md</code>文档中正文处添加以下内容作为展示在搜索页面上的搜索框(因为直接展示代码会被hugo以为要执行而不显示, 所以这里展示的是需要输入的代码片段的图片):</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/hugo-pagefind-search-md.png" alt="image-20230806220255292"></p>
<p>文件头的参数设置中(没有的及自己添加)要注明要在主菜单<code>main</code>中添加页面入口, 以及权重<code>weight</code>(决定页面入口在菜单栏的位置先后, 这样就无需在网站配置文件<code>config.toml</code>中另行编辑菜单设置规则了), 并且不要编入rss订阅内容<code>rss_ignore</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="ln">1</span><span class="cl">---
</span></span><span class="line"><span class="ln">2</span><span class="cl">title: &#34;搜索&#34;
</span></span><span class="line"><span class="ln">3</span><span class="cl">date: &#34;不要改, hugo会自己生成&#34;
</span></span><span class="line"><span class="ln">4</span><span class="cl">menu: &#34;main&#34;
</span></span><span class="line"><span class="ln">5</span><span class="cl">weight: 110 (视具体情况修改)
</span></span><span class="line"><span class="ln">6</span><span class="cl">rss_ignore: true
</span></span><span class="line"><span class="ln">7</span><span class="cl">---
</span></span></code></pre></div></li>
<li>
<p>效果预览</p>
<p>引入<code>Pagefind</code>短代码的静态网页在本地服务器进行预览<code>hugo server -D</code>时是不显示的, 要看效果的话需要在正式推送到服务端之后才能看到.</p>
</li>
</ul>
<h3 id="整合入github-action工作流">整合入GitHub Action工作流</h3>
<ul>
<li>
<p>添加<code>Pagefind</code>生成索引步骤</p>
<p>编辑 <code>/blog-yoli/.github/workflows/hugo.yml</code> 文件, 在 <code>steps</code> 小节中的 <code>Build</code> 和 <code>Deploy</code> 操作之间添加如下内容:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="ln">1</span><span class="cl">- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install nodejs</span><span class="w">
</span></span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="w">    </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/setup-node@v3</span><span class="w">
</span></span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="w">    </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="w">      </span><span class="nt">node-version</span><span class="p">:</span><span class="w"> </span><span class="m">18</span><span class="w">
</span></span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="w">  </span>- <span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">npm i pagefind</span><span class="w">
</span></span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="w">  </span>- <span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">npx pagefind --source public --bundle-dir search</span><span class="w">
</span></span></span></code></pre></div></li>
<li>
<p>尝试运行并查看效果:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">git add .
</span></span><span class="line"><span class="ln">2</span><span class="cl">git commit -m <span class="s2">&#34;add search function&#34;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">git push -u origin master
</span></span></code></pre></div><p>等待几分钟后部署成功后,在浏览器通过域名访问 <a href="https://www.yolichan.fun/zh/search/">https://www.yolichan.fun/zh/search/</a>就能看到搜索页面啦:</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/hugo-pagefind-result-page.png" alt="image-20230806213742990"></p>
</li>
</ul>
<h3 id="后记">后记</h3>
<p>写不动了...三月的时候好像就是因为本地调试的时候总是看不到搜索框, 以为卡bug了, 一直没有走出来, 连<code>fuse.js</code>也去尝试使用了一下, 无果😢😢😢. 这次一边配置, 还喜欢顺手玩一下<code>GitHub Action</code>的一键发布功能, 一次顺手部署完之后, 无意中发现能在网页端看到搜索框了,才恍然大雾(对, 大雾, 因为依然不清楚这是个什么原理)苦涩, 但是开心, 解决了小站一大bug, 呜呜呜.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.fournoas.com/posts/adding-full-text-search-to-a-hugo-static-website/">白汤四物: 为 Hugo 静态网站添加全文检索功能</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.dianbanjiu.com/post/%E7%BB%99%E6%88%91%E7%9A%84blog%E5%8A%A0%E4%B8%8A%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/">点半九: 给我的blog加上搜索功能</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>#hugo #waline 为静态博客搭建评论系统</title><link>https://www.yolichan.fun/zh/2023/08/04/2023-08-04-add-comment-system-waline/</link><pubDate>Fri, 04 Aug 2023 14:11:00 +0800</pubDate><guid>https://www.yolichan.fun/zh/2023/08/04/2023-08-04-add-comment-system-waline/</guid><description>序 关于waline评论系统 由于静态博客没有自带的数据库, 不能在后台进行数据存储和管理, 所以往往都没有用户评论功能, 这样为了实现评论功能, 常见</description><content:encoded><![CDATA[<h3 id="序-关于waline评论系统">序 关于waline评论系统</h3>
<p>由于静态博客没有自带的数据库, 不能在后台进行数据存储和管理, 所以往往都没有用户评论功能, 这样为了实现评论功能, 常见的解决方案是在网站加入第三方评论插件, 比如<code>disqus</code> \ <code>valine</code>等, 或者是引入一些平台的用户评论系统, 比如<code>GitHub</code>平台(评论者需要注册<code>GitHub</code>账号),  据说<code>valine</code>有用户数据泄漏的风险,  所以最终选择了使用<code>valine</code>的衍生版<a href="https://waline.js.org/guide/get-started/client.html">waline</a>评论系统, 搭建时接入的是由使用者自主注册管理的云数据库, 比较安全. 主要参考<code>waline</code>官方的<a href="https://waline.js.org/guide/get-started/">guidebook</a>, 实现一共有以下3个步骤:</p>
<ul>
<li>
<p>注册一个云数据库<code>LeanCloud</code>用于存储数据;</p>
</li>
<li>
<p>将<code>waline</code>应用部署到<code>Vercel</code>云平台, 并接入<code>LeanCloud</code>数据库, 部署到<code>Vercel</code>的<code>waline</code>支持绑定自定义域名, 以防由于<code>Vercel</code>服务器被墙而无法正常启用;</p>
</li>
<li>
<p>在本地<code>hugo</code>博客文件系统中配置<code>waline</code>的客户端, 通过配置令它接入<code>vercel</code>服务端, 这样子静态博客也能实现评论功能啦.</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/waline-client-view.png" alt="image-20230804191012157"></p>
</li>
</ul>
<h3 id="数据库部署-leancloud">数据库部署-LeanCloud</h3>
<ul>
<li>
<p>注册<a href="https://console.leancloud.app/apps">LeanCloud</a></p>
<p>最好选择国际版, 这样子之后绑定的自定义域名可以是没有经过备案的, 注册后创建应用:</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/leancloud-create-app.png" alt="image-20230804185902257"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/leancloud-app-credentials.png" alt="image-20230804190103113">进入控制台, 复制<code>设置-应用凭证</code>中的前三项, 作为之后部署到<code>Vercel</code>时的环境变量.</p>
<blockquote>
<p>图中仅示例, 凭证无效</p>
</blockquote>
</li>
<li>
<p>部署到服务端-<code>Vercel</code></p>
<p>拥有<code>GitHub</code>账号可以直接登陆<a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample">Vercel基于waline模板创建GitHub仓库repository</a>, 并且跳过创建团队(并非是协作项目). 满屏的烟花意味着部署成功🎉.</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/vercel-create-git-repository.png" alt="image-20230804190451011"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/vercel-establish-environment-variables.png" alt="image-20230804190623844"></p>
<p>在<code>Settings</code>中找到<code>Environment Variables</code>, 新建<code>LEAN_ID</code> \ <code>LEAN_KEY</code>  \ <code>LEAN_MASTER_KEY</code> 变量并填入在<code>LeanCloud</code>中获得的值:</p>
<table>
<thead>
<tr>
<th>LEAN_ID</th>
<th>LEAN_ID</th>
<th>LEAN_MASTER_KEY</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>APP ID</code></td>
<td><code>APP KEY</code></td>
<td><code>Master Key</code></td>
</tr>
</tbody>
</table>
</li>
<li>
<p>进行部署</p>
<p>环境变量配置完后点击顶部的<code>Deployments</code>, 点击顶部最新的一次部署右侧的<code>Redeploy</code>进行重新部署, 使刚才设置的环境变量生效.</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/vercel-waline-redeploy.png" alt="image-20230804191216195"></p>
<p>此时会跳转到 <code>Overview</code> 界面开始部署, 等待片刻后 <code>STATUS</code> 会变成 <code>Ready</code>. 此时请点击 <code>Visit</code>, 即可跳转到部署好的网站地址, 此地址即为你的服务端地址.</p>
</li>
<li>
<p>绑定域名</p>
<p>点击顶部的 <code>Settings</code> - <code>Domains</code> 进入域名配置页, 输入需要绑定的域名并点击 <code>Add</code>:</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/vercel-waline-settings-domains-new.png" alt="image-20230804192258976"></p>
<p>在域名服务器商处(用的<code>cloudflare</code>)管理<code>DNS解析</code>, 按以下值添加新的 <code>CNAME</code> 解析记录:</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>名称</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>CNAME</code></td>
<td><code>comments</code></td>
<td><code>cname.vercel-dns.com</code></td>
</tr>
</tbody>
</table>
<p>其他保持默认就好, 等待生效, 就可以通过在浏览器输入自定义域名<code>comments.yolichan.fun</code>来访问<code>waline</code>服务端啦.自定义域名之后添加<code>/ui</code>可以进入应用后台管理界面, 第一个注册的用户自动成为管理员账号, 所以应用生成后尽早进行账号注册以免管理员账号被访客注册.</p>
</li>
</ul>
<h3 id="通过html脚本在博客中引入waline客户端">通过html脚本在博客中引入waline客户端</h3>
<ul>
<li>
<p>先在主题配置文件<code>config.toml</code>中配置waline服务端参数, 在<code>[params]</code>变量之后插入:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="ln">1</span><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="c"># 中间是原有的一些配置,如:</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">	<span class="nx">defaultContentLanguage</span> <span class="p">=</span> <span class="s2">&#34;zh&#34;</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">	<span class="c"># ...</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">	<span class="c"># 然后插入以下说明:</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl">	<span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">waline</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl">    	<span class="nx">enable</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="ln">8</span><span class="cl">    	<span class="nx">serverURL</span> <span class="p">=</span> <span class="s2">&#34;https://comments.yolichan.fun/&#34;</span>  <span class="c">#已绑定域名 					# 换成你的serverURL</span>
</span></span><span class="line"><span class="ln">9</span><span class="cl">    	<span class="c"># 参考：https://waline.js.org/</span>
</span></span></code></pre></div><p>填入的serverURL等参数将在引入waline的功能实现脚本comment.html中进行调用.</p>
</li>
<li>
<p>引入第三方应用的功能实现脚本主要在<code>blog-yoli/layouts/partials/</code>目录下, 在该目录下新建一个<code>comment.html</code>文件:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">  <span class="c">&lt;!-- Waline --&gt;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">  <span class="c">&lt;!-- ... --&gt;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">  <span class="p">&lt;</span><span class="nt">link</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="na">href</span><span class="o">=</span><span class="s">&#34;https://unpkg.com/@waline/client@v2/dist/waline.css&#34;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">  <span class="p">/&gt;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">  <span class="p">&lt;</span><span class="nt">link</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="na">href</span><span class="o">=</span><span class="s">&#34;https://unpkg.com/@waline/client@v2/dist/waline-meta.css&#34;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">  <span class="p">/&gt;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">  <span class="c">&lt;!-- ... --&gt;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">  <span class="c">&lt;!-- ... --&gt;</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;waline&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">  <span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;module&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="kr">import</span> <span class="p">{</span> <span class="nx">init</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;https://unpkg.com/@waline/client@v2/dist/waline.mjs&#39;</span><span class="p">;</span> 
</span></span><span class="line"><span class="ln">19</span><span class="cl">    <span class="kr">const</span> <span class="nx">locale</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl">      <span class="nx">nick</span> <span class="o">:</span> <span class="s1">&#39;昵称&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">      <span class="nx">placeholder</span><span class="o">:</span> <span class="s1">&#39;欢迎留爪&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">      <span class="nx">sofa</span><span class="o">:</span> <span class="s1">&#39;空空空~&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">      <span class="nx">comment</span><span class="o">:</span> <span class="s1">&#39;thoughts or moods&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">      <span class="nx">more</span><span class="o">:</span> <span class="s1">&#39;还有~&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">      <span class="nx">emoji</span><span class="o">:</span> <span class="s1">&#39;emoji&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">      <span class="nx">admin</span><span class="o">:</span> <span class="s1">&#39;爱摸鱼的修理工&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl">      <span class="nx">level0</span><span class="o">:</span> <span class="s1">&#39;潜水&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">      <span class="nx">level1</span><span class="o">:</span> <span class="s1">&#39;冒泡&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">      <span class="nx">level2</span><span class="o">:</span> <span class="s1">&#39;吐槽&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">      <span class="nx">level3</span><span class="o">:</span> <span class="s1">&#39;活跃&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">      <span class="nx">level4</span><span class="o">:</span> <span class="s1">&#39;话唠&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">32</span><span class="cl">      <span class="nx">level5</span><span class="o">:</span> <span class="s1">&#39;传说&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">    <span class="p">};</span>
</span></span><span class="line"><span class="ln">34</span><span class="cl">
</span></span><span class="line"><span class="ln">35</span><span class="cl">    <span class="nx">init</span><span class="p">({</span>
</span></span><span class="line"><span class="ln">36</span><span class="cl">      <span class="nx">el</span><span class="o">:</span> <span class="s1">&#39;#waline&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">      <span class="nx">serverURL</span><span class="o">:</span> <span class="s1">&#39;{{ .Site.Params.Waline.serverURL }}&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">38</span><span class="cl">      <span class="nx">locale</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">39</span><span class="cl">      <span class="nx">emoji</span><span class="o">:</span> <span class="s1">&#39;https://unpkg.com/@waline/emojis@1.1.0/weibo&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">40</span><span class="cl">      <span class="nx">texRenderer</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">41</span><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="ln">42</span><span class="cl">  <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">43</span><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span></code></pre></div><blockquote>
<p>自定义语言变量<code>locale</code>的使用参考<code>waline</code>官方教程, 有的设置还需要在vercel服务端添加一些环境变量, 这里就不细讲啦, 也可以不进行配置直接使用默认参数.</p>
</blockquote>
</li>
<li>
<p>博客页面布局主要在<code>blog-yoli/layouts/post/single.html</code>中进行设计, 打开该文件, 在合适的位置插入代码, 表示引入<code>waline</code>评论区:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="ln">1</span><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container comment-waline&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">  {{ partial &#34;comments.html&#34; . }}
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span></code></pre></div><blockquote>
<p>一般是在结尾处最后一个<code>{{ end }}</code>标记之前插入, 表示在文章页末加载评论区</p>
</blockquote>
</li>
<li>
<p>关于<code>waline</code>评论区的样式可以在<code>blog-yoli/static/css/den.css</code>中进行设计:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c">/* Comments */</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c">/* waline 全局变量*/</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="p">:</span><span class="nd">root</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">  <span class="c">/* 主题色 */</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">  <span class="nv">--waline-font-size</span><span class="p">:</span> <span class="mi">14</span><span class="kt">px</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">  <span class="nv">--waline-theme-color</span><span class="p">:</span> <span class="mh">#f04853</span><span class="mi">88</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">  <span class="nv">--waline-active-color</span><span class="p">:</span> <span class="mh">#f04853</span><span class="n">c4</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">  <span class="nv">--waline-bgcolor-light</span><span class="p">:</span> <span class="mh">#FAF9F7</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">  <span class="nv">--waline-border-color</span><span class="p">:</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mf">0.278</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">  <span class="nv">--waline-disable-bgcolor</span><span class="p">:</span> <span class="mh">#FAF9F7</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">  <span class="nv">--waline-avatar-size</span><span class="p">:</span><span class="mi">5</span><span class="kt">rem</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">  <span class="nv">--waline-m-avatar-size</span><span class="p">:</span><span class="nb">calc</span><span class="p">(</span><span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">waline</span><span class="o">-</span><span class="n">avatar</span><span class="o">-</span><span class="n">size</span><span class="p">)</span><span class="o">*</span><span class="mi">9</span><span class="o">/</span><span class="mi">13</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span> 
</span></span><span class="line"><span class="ln">13</span><span class="cl">  <span class="nv">--waline-badge-color</span><span class="p">:</span><span class="nb">rgba</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mi">148</span><span class="p">,</span> <span class="mf">0.425</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">  <span class="nv">--waline-badge-font-size</span><span class="p">:</span> <span class="mf">0.45</span><span class="kt">em</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">  <span class="nv">--waline-info-bgcolor</span><span class="p">:</span><span class="mh">#f8f8f8</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">  <span class="nv">--waline-info-color</span><span class="p">:</span><span class="mh">#999999</span><span class="n">ca</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">  <span class="nv">--waline-info-font-size</span><span class="p">:</span><span class="mf">0.625</span><span class="kt">rem</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">  <span class="nv">--waline-border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">waline</span><span class="o">-</span><span class="n">border</span><span class="o">-</span><span class="kc">color</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">  <span class="nv">--waline-avatar-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span> <span class="cp">!important</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="p">.</span><span class="nc">comment-waline</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">  <span class="c">/*
</span></span></span><span class="line"><span class="ln">23</span><span class="cl"><span class="c">  margin-top: 10px;
</span></span></span><span class="line"><span class="ln">24</span><span class="cl"><span class="c">  position:relative;
</span></span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="c">  float: none;
</span></span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="c">  display: inline;
</span></span></span><span class="line"><span class="ln">27</span><span class="cl"><span class="c">  padding: 10px;
</span></span></span><span class="line"><span class="ln">28</span><span class="cl"><span class="c">  */</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">  <span class="k">background-color</span><span class="p">:</span> <span class="mh">#fff</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">18</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">  <span class="k">padding-top</span><span class="p">:</span> <span class="mi">25</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">32</span><span class="cl">  <span class="k">padding-bottom</span><span class="p">:</span> <span class="mi">40</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">  <span class="k">padding-left</span><span class="p">:</span> <span class="mi">40</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">34</span><span class="cl">  <span class="k">padding-right</span><span class="p">:</span> <span class="mi">40</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">  <span class="k">font-weight</span><span class="p">:</span> <span class="mi">300</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">36</span><span class="cl">  <span class="k">line-height</span><span class="p">:</span> <span class="mf">1.8</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">
</span></span><span class="line"><span class="ln">38</span><span class="cl">  <span class="c">/*
</span></span></span><span class="line"><span class="ln">39</span><span class="cl"><span class="c">  border-left: 1px solid rgba(0,0,0,0.1);
</span></span></span><span class="line"><span class="ln">40</span><span class="cl"><span class="c">  border-right: 1px solid rgba(0,0,0,0.1);
</span></span></span><span class="line"><span class="ln">41</span><span class="cl"><span class="c">  */</span>
</span></span><span class="line"><span class="ln">42</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">43</span><span class="cl"><span class="p">.</span><span class="nc">comment-underline</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">44</span><span class="cl">  <span class="k">display</span><span class="p">:</span> <span class="kc">inline-block</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">45</span><span class="cl">  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">46</span><span class="cl">  <span class="k">margin-bottom</span><span class="p">:</span> <span class="mi">0</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">47</span><span class="cl">  <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">48</span><span class="cl">  <span class="k">border-bottom</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span> <span class="kc">solid</span> <span class="mh">#f04853</span><span class="mi">88</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">49</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><blockquote>
<p><code>!important</code>表示强制启用, 避免被其他配置覆盖.</p>
</blockquote>
</li>
</ul>
<h3 id="后记">后记</h3>
<p>来一张辛苦劳作后的成果快照吧🎉🎉🎉:</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/show-waline-area.png" alt="image-20230804185016412"></p>
]]></content:encoded></item><item><title>#hugo #GitHub-Pages #GitHub-action 博客搭建笔记</title><link>https://www.yolichan.fun/zh/2023/07/25/start-with-hugo-and-githubpages/</link><pubDate>Tue, 25 Jul 2023 20:05:37 +0800</pubDate><guid>https://www.yolichan.fun/zh/2023/07/25/start-with-hugo-and-githubpages/</guid><description>序 建站之初 hugo使用go语言进行编译生成静态博客文件系统, 将文件系统发布到服务器上, 即可通过访问服务器来访问生成的静态博客网站, 这里服务器</description><content:encoded><![CDATA[<h3 id="序-建站之初">序 建站之初</h3>
<p><a href="https://gohugo.io/">hugo</a>使用<code>go</code>语言进行编译生成静态博客文件系统, 将文件系统发布到服务器上, 即可通过访问服务器来访问生成的静态博客网站, 这里服务器可以自己购买, 也可以直接部署在<a href="https://github.com/">GitHub</a>提供的免费服务器上, 即<a href="https://pages.github.com/">GitHub pages</a>的方式. <code>hugo</code>生成网站时拥有极快的渲染速度, 而且无需在服务器上搭建数据库, 免去了数据库系统学习和管理的烦恼(为了搭建网站提前选修了一个学期数据库系统原理的本人知道真相后😢), 由于以前搭建云主机吃了不少苦, 这里果断选择了部署到<code>GitHub pages</code>上的方案, 无需自己维护服务, 更稳定安全, 且免费啊啊啊(每个仓库1GB的免费容量). 因为建站之初是为了开一个记录的树洞bot, 作为友人🍧的生日礼物, 所以搭配一个具有特殊意义的自定义域名是必不可少哒. 总的来说, 一个完整的静态博客demo至少需要以下三部分的准备:</p>
<ul>
<li>静态网站生成器 - <code>hugo</code></li>
<li>存放页面的仓库 - 通过<code>GitHub pages</code>的方式托管在<code>GitHub</code>家的免费服务器上</li>
<li>域名 - <code>GitHub pages</code>的方式自带一个域名但这里选择绑定自定义域名嗷</li>
</ul>
<p>接下来便一一展开这个demo如何实现哒~</p>
<h3 id="使用hugo安装配置生成静态网站">使用<code>hugo</code>安装\配置\生成静态网站</h3>
<ul>
<li>
<p>安装<code>hugo</code></p>
<p>在<code>archlinux</code>系统上安装<code>hugo</code>并验证<code>hugo</code>版本 (其他系统均有相应的安装指令 不熟就不科普啦😅)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">sudo pacman -S hugo
</span></span><span class="line"><span class="ln">2</span><span class="cl">hugo version
</span></span></code></pre></div><p>使用<code>hugo</code>创建一个博客项目, 且命名为<code>blog-yoli</code>, 记得先cd到想要存放这个博客项目的目录位置.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">cd ~/echoo
</span></span><span class="line"><span class="ln">2</span><span class="cl">hugo new site blog-yoli
</span></span></code></pre></div></li>
<li>
<p>配置博客主题</p>
<p>查找<code>hugo</code>配置教程留意了很多风格, 最后选择了博主<a href="https://www.pseudoyu.com/zh/about/">pseudoyu</a>使用的<a href="https://github.com/shaform/hugo-theme-den">hugo-theme-den</a>主题, 有mood且简单, 专注于内容创作.</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/yu-blog%E5%B0%81%E9%9D%A2%E6%88%AA%E5%9B%BE.png" alt="image-20230802152737164"></p>
<p><code>pseudoyu</code>前辈写的<a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/#top">搭建教程</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>也很详尽, 多亏了他的教程<code>yolichan的树洞bot</code>才能从零到有, 也在github借鉴了一些前辈的部署方案, 最最主要的是, 前辈在搭建博客时使用的方案应该都是比对挑选过的, 很稳定.</p>
<p>参考教程, 将原主题仓库fork到自己的<code>GitHub</code>账户后,在本地使用<code>git submodule</code>进行链接到fork后形成的远程仓库.</p>
<p>我们可以将<code>GitHub</code>上的主题仓库直接 <code>git clone</code> 下来进行使用，但这种方式有一些弊端，当之后自己对主题进行修改后，可能会与原主题产生一些冲突，不方便版本管理与后续更新.  <sup id="fnref1:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">cd</span> blog-yoli
</span></span><span class="line"><span class="ln">2</span><span class="cl">git init
</span></span><span class="line"><span class="ln">3</span><span class="cl">git submodule add https://github.com/mewoooew/hugo-theme-den.git themes/hugo-theme-den<span class="sb">`</span>
</span></span></code></pre></div></li>
<li>
<p>更新主题</p>
<p>初始化</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># 如果是直接clone的他人的博客项目</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">git submodule update --init --recursive
</span></span></code></pre></div><p>同步本地修改到仓库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-v" data-lang="v"><span class="line"><span class="ln">1</span><span class="cl"><span class="nv">git</span> <span class="nv">submodule</span> <span class="nv">update</span> <span class="o">--</span><span class="nv">remote</span>
</span></span></code></pre></div></li>
<li>
<p>主题配置及发布</p>
<p>链接到仓库后并添加主题文件夹后, 还需要将主题文件夹示例站点<code>blog-yoli/themes/hugo-theme-den/exampleSite/</code>中的文件复制到博客根目录下才能生效:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="sb">`</span>cp -rf themes/hugo-theme-den/exampleSite/* ./<span class="sb">``</span>
</span></span></code></pre></div><p>由于一些原主题代码不能直接使用, 后面<code>hugo --server</code>调试时会有报错, 多次尝试后发现最简单粗暴的方式是删除<code>content/en/posts/*</code>下的文章, 因为这些代码主要是由这些文章页面进行引用的😵‍💫.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">cp -rf themes/hugo-theme-den/exampleSite/* ./
</span></span></code></pre></div><p>如果要启用多语言并且开箱使用原主题的一些模板, 还可以将主题文件夹<code>themes</code>下的<code>i8n</code> <code>layouts</code> <code>static</code>文件夹直接复制到博客根目录下, 例如:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">cp -rf /themes/hugo/hugo-theme-den/i18n ./
</span></span></code></pre></div><p>后面可以慢慢调整\修改\使用自己定制的一些方案.</p>
</li>
<li>
<p>站点细节配置</p>
<p>关于站点名称\目录分配\默认语言等站点细节都可以在配置文件<code>config.toml</code>中进行配置, 关于网站的样式设计细节存放在<code>blog-yoli/static/css/den.css</code>文件中, 不同主题的配置参数不太一样嗷, 多踩几次坑熟悉了就好 😢.</p>
</li>
<li>
<p>发布新文章</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">hugo new posts/blog-test.md
</span></span></code></pre></div><p>生成文章默认模板 <code>echoo/blog-yoli/archetypes/default.md</code>
如果配置文件设置了默认语言(例如中文zh)的话,生成的文章会被放到<code>blog-yoli/content/zh/posts/</code>目录下 . 除了<code>关于页</code>\ <code>搜索页</code>\ <code>友链页</code>等,平时的blog文章应该都放在<code>blog-yoli/content/zh/posts</code>文件夹下.</p>
</li>
<li>
<p><code>hugo</code>还有一大优点就是可以本地调试预览</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">hugo server -D
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="c1"># -D 参数表示渲染时显示处于草稿draft状态的文章页面</span>
</span></span></code></pre></div><p>运行后通过在浏览器访问 http://localhost:1313 即可预览网站搭建效果, 之后可以一边修改网站配置一边查看实时效果, 有点所见即所得的意思啦.</p>
</li>
</ul>
<h3 id="部署github-pages">部署GitHub Pages</h3>
<ul>
<li>
<p>首先准备好一个自家的域名(可以没有)</p>
<p>下面都以<code>yolichan.fun</code>为例.</p>
</li>
<li>
<p>创立符合 <code>username.github.io</code> 命名形式的仓库</p>
<p>建议勾选public(公有, 免费), 但不要勾选添加 <code>README.md</code>文件, 不然之后本地同步远程仓库会比较麻烦, 多一道<code>git pull</code>的工序下面都以 <a href="https://github.com/mewoooew/mewoooew.github.io">mewoooew.github.io</a> 为例.</p>
<p><code>GitHub Pages</code> 项目需要符合 <code>username.github.io</code> 的特殊命名格式，仓库建立完成后，可以在设置中配置自己注册的自定义域名来指向 <code>GitHub Pages</code> 生成的网址。<sup id="fnref2:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/%E5%88%9B%E7%AB%8B%E7%AC%A6%E5%90%88username-github-io%E5%91%BD%E5%90%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E4%BB%93%E5%BA%93.png" alt="image-20230802153708295"></p>
</li>
<li>
<p>将<code>GitHub Pages</code>设置中的<code>custom domian</code>和博客配置文件<code>config.toml</code>中的<code>baseURL</code>都改为自定义域名 <a href="https://www.yolichan.fun/">https://www.yolichan.fun/</a></p>
<img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/%E5%88%9B%E7%AB%8B%E8%87%AA%E5%91%BD%E5%90%8D%E4%BB%93%E5%BA%93.png" alt="image-20230802110625986"/>
</li>
<li>
<p>域名解析</p>
<p>配置完<code>GitHub Pages</code>后还需要通过<code>DNS解析</code>将域名指向<code>GitHub Pages</code>提供的个人主页域名, 这样才能让访者在浏览器访问自定义域名被导向<code>GitHub Pages</code>个人主页.</p>
<p>在需要在域名托管商进行<code>DNS解析</code>,选择<code>CNAME</code>,指向 <code>GitHub Pages</code> 网址, 这里选择的域名托管商<a href="https://www.cloudflare.com/zh-cn/">cloudflare</a>, 这样可以顺便使用上他家CDN加速服务.</p>
<img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/cloudflare%E5%AF%B9%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E8%BF%9B%E8%A1%8CDNS%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.png" alt="image-20230802112647640"/>
<p><code>CNAME</code> 解析没法设置 root 域名(无任何前缀的yolichan.fun), 只能设置 <code>www.yolichan.fun</code> 或其他子域名, 而子域名容易被<code>SEO优化</code>掉: 一些搜索引擎如alex或一些搜索查询工具网站等等默认是自动去掉<code>www.</code>来辨别网站的; 据说使用子域名的网站权重也相对更低. 对此, 参考<code>pseudoyu</code>的教程, 通过 <code>Cloudflare</code> 上自定义规则设置域名重定向, 如此访问<code>https://yolichan.fun</code>时就会被重定向到<code>https://www.yolichan.fun</code></p>
<img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/Cloudflare%20%E4%B8%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%84%E5%88%99%E8%AE%BE%E7%BD%AE%E5%9F%9F%E5%90%8D%E9%87%8D%E5%AE%9A%E5%90%91.png" alt="image-20230802112922144"/>
</li>
</ul>
<h3 id="在github-pages上发布博客">在GitHub Pages上发布博客</h3>
<p>要<code>GitHub Pages</code>显示博客网页, 还需要将<code>hugo</code>生成的的静态网页资源发布到之前创建的<code>mewoooew.github.io</code>仓库. 可以手动发布或者通过配置<code>GitHub Action</code>自动发布, 手动发布流程简单好上手, <code>GitHub Action</code>自动发布可以实现网站每日自动更新, 持续集成/交付(<code>CI/CD</code>), 这里选择<code>GitHub Action</code>的方式, 如果想使用自动发布的方式的化继续推荐<code>pseudoyu</code>的教程. 至于<code>GitHub Action</code>的实现方式则同时参考了<code>pseudoyu</code>的<code>教程</code>和<a href="https://io-oi.me/about/">reuixiy(一休儿)</a>的<a href="https://io-oi.me/tech/deploy-hugo-to-github-pages-via-github-actions/">教程</a>.<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<ul>
<li>
<p>另创建一个<code>GitHub</code>远程仓库<code>blog-yoli</code>用于存放博客源文件(即整个<code>blog-yoli/</code>下的站点文件系统), 创建的时候同样不建议勾选<code>创建README.md</code>.</p>
</li>
<li>
<p>初始化博客源文件本地仓库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># !~/blog-yoli/</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="c1"># 将博客根目录初始化为git本地仓库</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">git init
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="c1"># 将博客根目录下的文件(. 表示所有内容)提交到git本地仓库</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">git add .
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="c1"># 提交说明, 编辑说明文字有利于建立追踪, 防失忆很好用</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl">git commit -m <span class="s2">&#34;new&#34;</span>
</span></span></code></pre></div></li>
<li>
<p>将本地仓库同步到远程仓库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># 将本地仓库源与GitHub网站上托管的远程仓库进行链接</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="c1"># 只有初始化的时候需要链接, 之后都可以直接进行推送</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">git remote add origin git@github.com:mewoooew/blog-yoli.git
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="c1"># 如果之前没有在本地配置过GitHub账户的话还要根据提示配置一下账户信息</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="c1"># 生成SSH密钥对(配好钥匙再开门), 存储到GitHub网站上, 才能链接成功</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="c1"># 将本地仓库内容推送到远程仓库, -u表示强制推送</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl">git push -u origin master
</span></span></code></pre></div></li>
<li>
<p>建立<code>GitHub Action</code>工作流</p>
<p>在博客根目录下新建配置文件<code>blog-yoli/.github/workflows/build.yml</code>用以指示<code>GitHub Action</code>工作流程:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">GitHub Pages</span><span class="w">
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="w"></span><span class="kc">on</span><span class="p">:</span><span class="w">	</span><span class="c">#表示 GitHub Action 触发条件</span><span class="w">
</span></span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="w">  </span><span class="nt">pull_request</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w"> </span><span class="c">#GitHub Action 中的任务</span><span class="w">
</span></span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w"> </span><span class="c"># GitHub Action 运行环境</span><span class="w">
</span></span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="w">    </span><span class="nt">concurrency</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="w">      </span><span class="nt">group</span><span class="p">:</span><span class="w"> </span><span class="l">${{ github.workflow }}-${{ github.ref }}</span><span class="w">
</span></span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Checkout    	#检出最新代码到 GitHub Actions 的虚拟环境中</span><span class="w">
</span></span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v3</span><span class="w"> </span><span class="c">#GitHub Action 中的插件</span><span class="w">
</span></span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln">16</span><span class="cl"><span class="w">          </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">  </span><span class="c"># Fetch Hugo themes (true OR recursive)</span><span class="w">
</span></span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="w">          </span><span class="c"># `submodules` 值为 `true` </span><span class="w">
</span></span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="w">          </span><span class="c"># 可以同步博客源仓库的子模块，即我们的主题模块。</span><span class="w">
</span></span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="w">          </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">    </span><span class="c"># Fetch all history for .GitInfo and .Lastmod</span><span class="w">
</span></span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span></span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w"> </span><span class="c">#GitHub Action 中的插件</span><span class="w">
</span></span></span><span class="line"><span class="ln">23</span><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln">24</span><span class="cl"><span class="w">          </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;latest&#39;</span><span class="w">
</span></span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="w">          </span><span class="nt">extended</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="ln">27</span><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build</span><span class="w">
</span></span></span><span class="line"><span class="ln">28</span><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo --minify</span><span class="w">
</span></span></span><span class="line"><span class="ln">29</span><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="ln">30</span><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span></span></span><span class="line"><span class="ln">31</span><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w"> </span><span class="c">#GitHub Action 中的插件</span><span class="w">
</span></span></span><span class="line"><span class="ln">32</span><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="ln">33</span><span class="cl"><span class="w">          </span><span class="c">#  Note that the GITHUB_TOKEN is NOT a personal access token. A GitHub Actions runner automatically creates a</span><span class="w">
</span></span></span><span class="line"><span class="ln">34</span><span class="cl"><span class="w">          </span><span class="c">#  GITHUB_TOKEN secret to authenticate in your workflow. So, you can start to deploy immediately without any</span><span class="w">
</span></span></span><span class="line"><span class="ln">35</span><span class="cl"><span class="w">          </span><span class="c">#  configuration.</span><span class="w">
</span></span></span><span class="line"><span class="ln">36</span><span class="cl"><span class="w">          </span><span class="c">#  personal_token参数值不要修改，github action 会自动引用</span><span class="w">
</span></span></span><span class="line"><span class="ln">37</span><span class="cl"><span class="w">          </span><span class="nt">personal_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.PERSONAL_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="ln">38</span><span class="cl"><span class="w">          </span><span class="nt">external_repository</span><span class="p">:</span><span class="w"> </span><span class="l">mewoooew/mewoooew.github.io</span><span class="w">
</span></span></span><span class="line"><span class="ln">39</span><span class="cl"><span class="w">          </span><span class="nt">publish_branch</span><span class="p">:</span><span class="w"> </span><span class="l">master</span><span class="w">
</span></span></span><span class="line"><span class="ln">40</span><span class="cl"><span class="w">          </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span><span class="line"><span class="ln">41</span><span class="cl"><span class="w">          </span><span class="nt">commit_message</span><span class="p">:</span><span class="w"> </span><span class="l">${{github.event.head_commit.message }}</span><span class="w">
</span></span></span></code></pre></div><p>其中<code>EXTERNAL_REPOSITORY</code> 改为自己的 <code>GitHub Pages</code> 仓库.
至于<code>PERSONAL_TOKEN</code>要想成功引用,需要先创建一个要在 <code>GitHub</code> 账户下 <code>Setting - Developer setting - Personal access tokens</code> 下创建一个 <code>Token</code>:</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/GitHub%E4%B8%AD%E5%88%9B%E5%BB%BAtoken.png" alt="image-20230802121550747"></p>
<p>创建时开启<code>repo</code>与<code>workflow</code>权限</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/token%E5%BC%80%E5%90%AF%C2%A0repo%C2%A0%E4%B8%8E%C2%A0workflow%E6%9D%83%E9%99%90.png" alt="image-20230802121645661"></p>
<p>复制生成的 <code>Token</code>（注：只会出现一次）, 然后在博客源仓库的 <code>Settings - Secrets - Actions</code> 中添加 <code>PERSONAL_TOKEN</code> 环境变量为刚才的 <code>Token</code>, 这样 <code>GitHub Action</code> 就可以引用 生成的<code>Token</code>了.</p>
<p>完成上述配置后, 推送代码至仓库, 即可触发 <code>GitHub Action</code>, 自动生成博客页面并推送至 <code>GitHub Pages</code> 仓库.原本空白的<code>mewoooew/mewoooew.github.io</code>仓库会出现发布内容.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># !~blog-yoli/</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">git add .
</span></span><span class="line"><span class="ln">3</span><span class="cl">git commit -m <span class="s2">&#34;test&#34;</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">git push -u origin master
</span></span></code></pre></div><p>在<code>GitHub</code>仓库控制台<code>Actions</code>处可以查看部署日志以便于debug</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/GitHub%20Actions%E6%8E%A7%E5%88%B6%E5%8F%B0.png" alt="image-20230802175333915"></p>
</li>
<li>
<p>绑定自定义域名</p>
<p>在<code>blog-yoli/static/</code>目录下新建无后缀的文件<code>CNAME</code>, 并在文件中输入自定义域名.</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/%E6%96%B0%E5%BB%BA%E6%97%A0%E5%90%8E%E7%BC%80%E7%9A%84%E6%96%87%E4%BB%B6CNAME%E6%96%87%E4%BB%B6.png" alt="image-20230802122014890"></p>
</li>
<li>
<p>一键发布文章\推送至<code>GitHub</code>远程仓库</p>
<p>创建<code>shell</code>脚本<code>yoli.sh</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="cp"></span><span class="c1"># 使用方法:</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="c1"># bash yoli.sh &#34;提交说明的内容&#34;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="c1"># \033[0;32 &#34;...&#34; \033[0m 表示绿色打印中间字符串变量</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="c1"># 在命令行输出绿色提示&#34;Deploying updates to GitHub...&#34;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;\033[0;32mDeploying updates to GitHub...\033[0m&#34;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="c1"># 将中文目录下的文章复制到英文目录下</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">cp -rf ./content/zh/posts/* ./content/en/posts/
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="c1"># 清除缓存</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">git rm -rf --cached <span class="k">$(</span>git ls-files<span class="k">)</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="c1"># 提交内容</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">git add .
</span></span><span class="line"><span class="ln">16</span><span class="cl"><span class="c1"># 提交说明</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="c1"># $#表示提供的参数个数</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="c1"># $1表示提供的第一个参数</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="nv">msg</span><span class="o">=</span><span class="s2">&#34;rebuilding site `date`&#34;</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="nv">$#</span> -eq <span class="m">1</span> <span class="o">]</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">  <span class="k">then</span> <span class="nv">msg</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$1</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">git commit -m <span class="s2">&#34;</span><span class="nv">$msg</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="c1"># 推送到远程仓库</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">git push -u origin master
</span></span></code></pre></div><p>这样子, 博客文章发布或者站点配置更新流程就变成了:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># ~/blog-yoli/</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="c1"># hugo新建markdown格式的文档:</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">hugo new /zh/posts/postname.md
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="c1"># 打开markdown编辑器编辑postname.md文档内容并保存</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="c1"># 需要学习一些基本markdown语法哎呀呀</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="c1"># 推荐Typora 所见即所得 搭配pigGO进行图床管理很方便</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl"><span class="c1"># 然后终端直接运行脚本yoli.sh</span>
</span></span><span class="line"><span class="ln">8</span><span class="cl">bash yoli.sh <span class="s2">&#34;关于本次提交的说明,比如: 添加了评论系统&#34;</span>
</span></span><span class="line"><span class="ln">9</span><span class="cl"><span class="c1"># 大概过个一两分钟(第一次部署会慢些)就能通过配置的域名yolichan.fun访问博客站点啦</span>
</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/blog-yoli%E5%88%9D%E8%B2%8C.png" alt="image-20230802131946420"></p>
</li>
<li>
<p>使用<code>cloudflare</code>提供的<code>CDN</code>加速服务来为访问网站提速</p>
<p>只需要在<code>DNS</code>管理那里将代理状态勾选上即可, 如果需要 <code>SSL/TLS 严格加密模式</code>, 可以在解析<code>A记录</code>时暂时将代理状态禁用, 也就是暂时禁用<code>CDN</code>, 解析生效后, 在<code>GitHub Pages</code>后台开启<code>Enforce HTTPS</code> , 待<code>Github Pages</code>的<code>https</code>生效后, 再将<code>CloudFlare</code>的代理状态启用.</p>
<p><img src="https://cdn.jsdelivr.net/gh/mewoooew/picGO@main/images/%E5%90%AF%E7%94%A8CDN%E5%8A%A0%E9%80%9F.png" alt="image-20230802124113395"></p>
</li>
</ul>
<h3 id="后记">后记</h3>
<p>搭建网站的事四月前就开始弄了, 几乎没接触过前端的我为了赶工照猫画虎弄出了一个很简单的demo, 最最最离谱的是当时连评论系统都建好了, 结果创建的文章不能显示, 当时迷迷糊糊用了一些野路子最终还是把生日祝福加上去了, 但是但是, 由于踩坑受创太多, 后面一直在摆, 小破站就像一间漏雨的小屋, 一直没有得到修补(修理工😢). 兜兜转转到7月, 心中还是没能放下小破站, 正好经历了一些心境的转变, 开始对自己不再那么push, 经历了一次搬家算是彻底告别了校园生活, 每天骑自行车去工位, 然后回到自己的小窝, 开始动手自己带便当🍱(单位食堂好贵...). 日子归于平静, 反而一点一点重拾了建站的信心, 因为当初的bug一直没有排查, 所以除了一些能看懂的配置文件(实在不想再配置一遍), 源码删了个尽, 后知后觉想起生日祝福的页面还没有保留的时候我😢😢😢.</p>
<p>打开教程从头来了一遍, 鉴于之前的踩坑经验, 再建站反而要顺利很多, 就连文章不显示的bug在不知不觉间摸清了, 然后我收获了:</p>
<p>一些<code>html</code>和<code>css</code>代码的调用原理, 一些<code>markdown</code>基础语法, <code>git</code>管理工具, 还有困扰我已久的<code>GitHub</code>到底是用来干嘛的. 之前一直以为就是一个存代码的云盘, 现在发现还能进行版本管理以及<code>GitHub Pages</code> \ <code>GitHub Action</code>等工具也很有趣, 之后的评论系统/图床管理也都用到了<code>GitHub</code>, 虽然现在的我依然无法给出一个准确定义, 但至少它现在在我眼里是一个神奇的网站. 其实还运用到了<code>go</code>语言的知识, 但主要是一些模板和短代码使用到了<code>go</code>语言语法, 而这部分基本上是直接网上复制来的, 最多修改一些参数, 所以不会<code>go</code>语言其实影响不大. 奇怪的知识一直在增加...但很有趣...除了bug...</p>
<p>回归建站初衷. 曾经经历过一段封闭压抑的日子, 仿佛一台卡住了传送带的机器, 只有输入没有输出, 结果就是内部部件的损耗. 然而主流的社交平台太多限制, 管理起来也有诸多不便, 所以博客或许会是一个不错的选择. 就是这忽高忽低的分享欲...还有就是和好朋友分开了, 积攒的很多分享欲常常会搁置过期, 记忆它时常出走...如果能将这些想法记录下来放到小站上, 想起对方的时候就打开博客看看, 感觉很不错的样子, 所以接下来的工作: 除了继续完善小站的搭建(一点修理工的自我修养)以外最重要的就是实现共同协作啦,  一起期待吧◕‿◕｡</p>
<h3 id="todo">TODO</h3>
<ul>
<li><input checked="" disabled="" type="checkbox"> 网站美化\文章样式设计\图床管理</li>
<li><input checked="" disabled="" type="checkbox"> 搭建评论系统</li>
<li><input checked="" disabled="" type="checkbox"> 添加站内搜索功能</li>
<li><input checked="" disabled="" type="checkbox"> 配置友链展示页面(有总比没有好hhh)</li>
<li><input disabled="" type="checkbox"> 实现共同协作</li>
<li><input disabled="" type="checkbox"> 增加网站数据统计分析功能</li>
<li><input disabled="" type="checkbox"> 添加自动关联文章功能</li>
<li><input disabled="" type="checkbox"> 添加回到顶部按钮</li>
<li><input disabled="" type="checkbox"> 等一个适合的logo</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/#top">pseudoyu: Hugo + GitHub Action，搭建你的博客自动发布系统</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref1:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref2:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://io-oi.me/tech/deploy-hugo-to-github-pages-via-github-actions/">reuixiy: 使用 GitHub Actions 部署 Hugo 博客到 GitHub Pages</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Den Theme Preview</title><link>https://www.yolichan.fun/zh/2018/03/06/den-theme-preview/</link><pubDate>Tue, 06 Mar 2018 16:01:23 +0800</pubDate><guid>https://www.yolichan.fun/zh/2018/03/06/den-theme-preview/</guid><description>&lt;p>This is a simple preview for styles in Den.&lt;/p></description><content:encoded><![CDATA[<p>This is a simple preview for styles in Den.</p>
<h2 id="header">Header</h2>
<p>A paragraph is like this.</p>
<p>A <code>paragraph</code> <code>might</code> <code>be</code> <code>very</code> very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very <code>long</code>.</p>
<h3 id="headers">Headers</h3>
<h4 id="headers-1">Headers</h4>
<h2 id="highlighted-code-blocks">Highlighted Code Blocks</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello world&#39;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="blockquotes">Blockquotes</h2>
<blockquote>
<p>This is a blockquote with two paragraphs. This is first paragraph.</p>
<p>This is second pragraph.</p>
</blockquote>
<h2 id="自定义引用">自定义引用</h2>
<blockquote class="quote">
        <p>十里青山远，潮平路带沙。数声啼鸟怨年华。又是凄凉时候，在天涯。白露收残月，清风散晓霞。绿杨堤畔问荷花。记得年时沽酒，那人家。</p></blockquote> 
<h2 id="lists">Lists</h2>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<ol>
<li>Red</li>
<li>Green</li>
<li>Blue
<ul>
<li>A</li>
<li>B</li>
<li>C
<ol>
<li>D</li>
<li>E</li>
<li>F</li>
</ol>
</li>
</ul>
</li>
</ol>
<h2 id="task-list">Task List</h2>
<ul>
<li><input disabled="" type="checkbox"> a task list item</li>
<li><input disabled="" type="checkbox"> list syntax <del>required</del></li>
<li><input disabled="" type="checkbox"> normal <strong>formatting</strong></li>
<li><input disabled="" type="checkbox"> incomplete</li>
<li><input checked="" disabled="" type="checkbox"> completed</li>
</ul>
<h2 id="formatted-texts">Formatted Texts</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Markdown</th>
<th>HTML tag</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>Emphasis</em></td>
<td>*Emphasis*</td>
<td><code>&lt;em&gt;&lt;/em&gt;</code></td>
</tr>
<tr>
<td><strong>Strong</strong></td>
<td>**Strong**</td>
<td><code>&lt;strong&gt;&lt;/strong&gt;</code></td>
</tr>
<tr>
<td><code>code</code></td>
<td>`code`</td>
<td><code>&lt;code&gt;&lt;/code&gt;</code></td>
</tr>
<tr>
<td><del>Strikethrough</del></td>
<td>~~Strikethrough~~</td>
<td><code>&lt;del&gt;&lt;/del</code></td>
</tr>
<tr>
<td><strong>Underline</strong></td>
<td>__underline__</td>
<td><code>&lt;u&gt;&lt;/u&gt;</code></td>
</tr>
<tr>
<td><kbd>Key</kbd></td>
<td>&lt;kbd&gt;Key&lt;/kbd&gt;</td>
<td><code>&lt;kbd&gt;&lt;/kbd&gt;</code></td>
</tr>
</tbody>
</table>
<h2 id="tables">Tables</h2>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table>
<h2 id="footnotes">Footnotes</h2>
<p>You can create footnotes like this<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<h2 id="horizontal-rules">Horizontal Rules</h2>
<p>A rule.</p>
<hr>
<p>A rule.</p>
<hr>
<h2 id="links">Links</h2>
<p>This is <a href="http://example.com/%22Title%22">an example</a> inline link.</p>
<h2 id="figure">Figure</h2>

<link rel="stylesheet" href="https://www.yolichan.fun/css/hugo-easy-gallery.css" />
<div class="box aligncenter" style="max-width:500px;">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="/images/globe.svg" alt="Globe" />
    </div>
    
      <figcaption>
          <p><strong>Globe</strong>
              
          </p>
      </figcaption>
  </figure>
</div>

<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Here is the <em>text</em> of the <strong>footnote</strong>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item></channel></rss>